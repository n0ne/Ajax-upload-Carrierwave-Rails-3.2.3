<div id="file-uploader">
    <noscript>
        <p>Please enable JavaScript to use file uploader.</p>
        <!-- or put a simple form for upload here -->
    </noscript>
</div>
<script>
var uploader = new qq.FileUploader({
    // pass the dom node (ex. $(selector)[0] for jQuery users)
    // debug: true,
    element: document.getElementById('file-uploader'),
    // path to server-side upload script
    action: '<%= media_path %>',
    onComplete: function(id, fileName, responseJSON){
        // if ($('.qq-upload-file:contains(\'' + fileName + '\')')) {
        //   console.log($('.qq-upload-file:contains(\'' + fileName + '\')').parent());
        //   $('.qq-upload-file:contains(\'' + fileName + '\')').parent().delay(2000).fadeOut();
        // }
        // //alert($('.qq-upload-file').html());
        // // alert(responseJSON.id);
        // var str = '<li class="span3" id="picture_' + responseJSON.id + '">' +
        //     '<div class="thumbnail">' +
        //       '<img src="' + responseJSON.src + '" alt="">' +
              
        //           '<a href="<%= edit_medium_path(:id =>' + responseJSON.id + ') %>" class="btn btn-mini">' +
        //             '<i class="icon-edit "></i>' +
        //             'Редактировать' +
        //           '</a>' +
        //           '<a class="btn btn-mini btn-delete" data-confirm="Вы уверены?" data-method="delete" href="<%= media_path(:id => ' + responseJSON.id + ') %>" ' +
        //             '<i class="icon-trash"></i>' +
        //             'Удалить ' +
        //           '</a>' +
             
        //     '</div>' +
        //   '</li>';
        // $(str).prependTo($('.thumbnails'));

    }
});
</script>

<%- model_class = Medium.new.class -%>
<h1><%=t '.title', :default => model_class.model_name.human.pluralize %></h1>
<table class="table table-striped">
  <thead>
    <tr>
      <th><%= model_class.human_attribute_name(:id) %></th>
      <th><%= model_class.human_attribute_name(:audio) %></th>
      <th><%= model_class.human_attribute_name(:created_at) %></th>
      <th><%=t '.actions', :default => t("helpers.actions") %></th>
    </tr>
  </thead>
  <tbody>
    <% @media.each do |medium| %>
      <tr>
        <td><%= link_to medium.id, medium_path(medium) %></td>
        <td><%= medium.audio %></td>
        <td><%=l medium.created_at %></td>
        <td>
          <%= link_to t('.edit', :default => t("helpers.links.edit")),
                      edit_medium_path(medium), :class => 'btn btn-mini' %>
          <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
                      medium_path(medium),
                      :method => :delete,
                      :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')),
                      :class => 'btn btn-mini btn-danger' %>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<%= link_to t('.new', :default => t("helpers.links.new")),
            new_medium_path,
            :class => 'btn btn-primary' %>
